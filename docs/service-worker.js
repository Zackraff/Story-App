const CACHE_NAME="cerita-app-v1",urlsToCache=["/","/index.html","/manifest.json","/favicon.png","/src/scripts/app.js","/src/scripts/data/api.js","/src/scripts/models/model.js","/src/scripts/presenters/presenter.js","/src/scripts/views/view.js","/src/scripts/router.js","/src/scripts/routes/routes.js","/src/scripts/pages/login/login-page.js","/src/scripts/pages/register/register-page.js","/src/scripts/pages/stories/stories-page.js","/src/scripts/pages/stories/detail-story-page.js","/src/scripts/pages/add-story/add-story-page.js","/src/scripts/pages/maps/maps-page.js","/src/scripts/pages/saved-stories/saved-stories-page.js","/src/scripts/pages/notifications/notifications-page.js","/src/scripts/pages/about/about-page.js","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"];self.addEventListener("install",(e=>{console.log("Service Worker installed"),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Caching files:",urlsToCache),e.addAll(urlsToCache).catch((e=>{console.error("Failed to cache:",e)})))))),self.skipWaiting()})),self.addEventListener("activate",(e=>{console.log("Service Worker activated"),e.waitUntil(Promise.all([self.clients.claim(),caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("Deleting old cache:",e),caches.delete(e)})))))]))})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((s=>s?(console.log("Serving from cache:",e.request.url),s):(console.log("Fetching from network:",e.request.url),fetch(e.request).catch((()=>(console.error("Network request failed, serving offline page"),caches.match("/index.html"))))))))})),self.addEventListener("push",(e=>{let s;console.log("Push event received with data:",e.data);try{s=e.data?e.data.json():{},console.log("Parsed push data:",s)}catch(e){console.error("Failed to parse push data as JSON:",e),s={title:"Notifikasi",options:{body:"Data notifikasi tidak valid."}},console.log("Fallback data used:",s)}const{title:t="Notifikasi",options:i={body:"Pesan default jika data kosong."}}=s;console.log("Showing notification with title:",t,"and options:",i),e.waitUntil(self.registration.showNotification(t,{...i,icon:"/favicon.png",badge:"/favicon.png",vibrate:[200,100,200]}).catch((e=>{console.error("Failed to show notification:",e)})))})),self.addEventListener("notificationclick",(e=>{console.log("Notification clicked:",e.notification),e.notification.close(),e.waitUntil(clients.openWindow("/").catch((e=>{console.error("Failed to open window:",e)})))})),self.addEventListener("message",(e=>{console.log("Message received from client:",e.data)}));